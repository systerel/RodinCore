<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.rodinp.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.rodinp.core" id="conversions" name="Rodin Conversions"/>
      </appInfo>
      <documentation>
         See extension point &lt;code&gt;fileElementVersions&lt;/code&gt;
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <choice minOccurs="1" maxOccurs="unbounded">
            <element ref="simple"/>
            <element ref="sorted"/>
            <element ref="source"/>
            <element ref="multiple"/>
         </choice>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified identifier of the target extension point
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional identifier of the extension instance
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name of the extension instance
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="renameElement">
      <annotation>
         <documentation>
            rename the selected element
         </documentation>
      </annotation>
      <complexType>
         <attribute name="newId" type="string" use="required">
            <annotation>
               <documentation>
                  the new fully qualified element type identifier
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="renameAttribute">
      <annotation>
         <documentation>
            rename an attribute of the selected element
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  the current fully qualified attribute type identifier
               </documentation>
            </annotation>
         </attribute>
         <attribute name="newId" type="string" use="required">
            <annotation>
               <documentation>
                  the new fully qualified attribute type identifier
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="addAttribute">
      <annotation>
         <documentation>
            add an attribute to the selected element; adding an attribute has no effect if the attribute type already exists in the selected node.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="newId" type="string" use="required">
            <annotation>
               <documentation>
                  the new fully qualified attribute type identifier
               </documentation>
            </annotation>
         </attribute>
         <attribute name="newValue" type="string" use="required">
            <annotation>
               <documentation>
                  the value to be given to the new attribute
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="changeName">
      <annotation>
         <documentation>
            change the internal element name of the selected element
         </documentation>
      </annotation>
      <complexType>
         <attribute name="newValue" type="string" use="required">
            <annotation>
               <documentation>
                  The value to be given to the name attribute. The previous value of the name can be referred to as the &apos;@&apos; character in the new value. For instance, if the previous value is &quot;int_name01&quot;, then giving newValue=&quot;xx_@_yy&quot; will actually result in name=&quot;xx_int_name01_yy&quot;.
It is not required to refer to the previous value.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="modifyAttribute">
      <annotation>
         <documentation>
            modify the contents of an attribute of the selected element
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  the fully qualified identifier of the attribute type
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  the fully-qualified name of a class that implements &lt;code&gt;IAttributeModifier&lt;/code&gt;
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.rodinp.core.version.IAttributeModifier"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="sorted">
      <annotation>
         <documentation>
            Description of a sorted conversion, a simple conversion that sorts elements by their element type identifiers before converting the elements:
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="element"/>
         </sequence>
         <attribute name="type" type="string" use="required">
            <annotation>
               <documentation>
                  the fully qualified identifier of a type of file elements to which this version applies
               </documentation>
            </annotation>
         </attribute>
         <attribute name="version" type="string" use="required">
            <annotation>
               <documentation>
                  the target version of this conversion; each conversion converts from &lt;code&gt;version-1&lt;/code&gt; to &lt;code&gt;version&lt;/code&gt;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="order" use="required">
            <annotation>
               <documentation>
                  the sorting order for element types, either &lt;code&gt;ascending&lt;/code&gt; or &lt;code&gt;descending&lt;/code&gt;
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="ascending">
                  </enumeration>
                  <enumeration value="descending">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
      </complexType>
   </element>

   <element name="simple">
      <annotation>
         <documentation>
            Description of a simple conversion:
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="element"/>
         </sequence>
         <attribute name="type" type="string" use="required">
            <annotation>
               <documentation>
                  the fully qualified identifier of a type of file elements to which this version applies
               </documentation>
            </annotation>
         </attribute>
         <attribute name="version" type="string" use="required">
            <annotation>
               <documentation>
                  the target version of this conversion; each conversion converts from &lt;code&gt;version-1&lt;/code&gt; to &lt;code&gt;version&lt;/code&gt;.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="source">
      <complexType>
         <attribute name="type" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="version" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="source" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="multiple">
      <annotation>
         <documentation>
            A multiple conversion converts elements based on a path pattern.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="pattern" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="type" type="string" use="required">
            <annotation>
               <documentation>
                  the fully qualified identifier of a type of file elements to which this version applies
               </documentation>
            </annotation>
         </attribute>
         <attribute name="version" type="string" use="required">
            <annotation>
               <documentation>
                  the target version of this conversion; each conversion converts from &lt;code&gt;version-1&lt;/code&gt; to &lt;code&gt;version&lt;/code&gt;.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="element">
      <annotation>
         <documentation>
            the element type to which to apply a set of operations.
         </documentation>
      </annotation>
      <complexType>
         <choice minOccurs="1" maxOccurs="unbounded">
            <element ref="renameElement"/>
            <element ref="renameAttribute"/>
            <element ref="addAttribute"/>
            <element ref="changeName"/>
         </choice>
         <attribute name="elementPath" type="string" use="required">
            <annotation>
               <documentation>
                  the path to the element to which to apply the operations; the last element type identifier on this path determines that element; the element type identifier must not refer to a file element type.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="pattern">
      <annotation>
         <documentation>
            the pattern that matches elements to convert.
         </documentation>
      </annotation>
      <complexType>
         <choice minOccurs="1" maxOccurs="unbounded">
            <element ref="modifyAttribute"/>
         </choice>
         <attribute name="patternPath" type="string" use="required">
            <annotation>
               <documentation>
                  the path to the elements to which to apply the operations;
the path can be any valid XPath pattern, including &quot;//*&quot; that matches all elements.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         0.7.6
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         For extension examples, please refer to the &quot;org.eventb.core&quot; plug-in.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         See extension point &lt;code&gt;fileElementVersions&lt;/code&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         None required.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2007 ETH Zurich.&lt;br&gt;
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
&lt;a href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;http://www.eclipse.org/legal/epl-v10.html&lt;/a&gt;
      </documentation>
   </annotation>

</schema>
