<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eventb.ui" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eventb.ui" id="proofTactics" name="%point.proofTacticsName"/>
      </appInfo>
      <documentation>
         The proof tactics extension point allows plug-ins to contribute new tactics and proof commands to the Event-B Proving User Interface. There are three forms of contributions: &lt;cite&gt;tactics&lt;/cite&gt;, &lt;cite&gt;toolbars&lt;/cite&gt;, and &lt;cite&gt;dropdowns&lt;/cite&gt;.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
         <documentation>
            Plug-in writers register new proof commands to the Event-B Proving User Interface by extending this extension point. This is the root element.  This contains a sequence of &lt;code&gt;tactic&lt;/code&gt;, &lt;code&gt;toolbar&lt;/code&gt; and &lt;code&gt;dropdown&lt;/code&gt; elements.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <choice>
               <element ref="tactic" minOccurs="0" maxOccurs="unbounded"/>
               <element ref="toolbar" minOccurs="0" maxOccurs="unbounded"/>
               <element ref="dropdown" minOccurs="0" maxOccurs="unbounded"/>
               <element ref="dynamic_dropdown" minOccurs="0" maxOccurs="unbounded"/>
            </choice>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified identifier of the target extension point.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional identifier of the extension instance.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name of the extension instance.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="tactic">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="id" icon="icon"/>
         </appInfo>
         <documentation>
            This element declares a new proof tactic with the Proving User Interface, including its location and implementation. One of the attributes &lt;code&gt;tacticProvider&lt;/code&gt; or &lt;code&gt;proofCommand&lt;/code&gt; must be specified, but not both. Moreover, if &lt;code&gt;proofCommand&lt;/code&gt; is specified, then the &lt;code&gt;target&lt;/code&gt; must be &lt;code&gt;global&lt;/code&gt;.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique name that will be used to identify this tactic.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="target" use="required">
            <annotation>
               <documentation>
                  A required attribute to specify the scope of the tactic:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;global&lt;/code&gt; if the tactic is applicable to a proof tree node as a whole,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hypothesis&lt;/code&gt; if the tactic is applicable to an hypothesis predicate only,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;goal&lt;/code&gt; if the tactic is applicable to a goal predicate only,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;any&lt;/code&gt; if the tactic is applicable to any predicate (i.e., both hypothesis and goal).&lt;/li&gt;
&lt;/ul&gt;
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="hypothesis">
                  </enumeration>
                  <enumeration value="goal">
                  </enumeration>
                  <enumeration value="global">
                  </enumeration>
                  <enumeration value="any">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="icon" type="string" use="required">
            <annotation>
               <documentation>
                  an icon for this tactic (recommended size is 16 x 16).
               </documentation>
               <appInfo>
                  <meta.attribute kind="resource"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="interrupt" type="boolean" use="required">
            <annotation>
               <documentation>
                  whether this tactic is interruptable or not. Non interruptable tactics may modify the UI and therefore run in the UI thread. Interruptable tactics can run in a background thread.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="tooltip" type="string" use="required">
            <annotation>
               <documentation>
                  A string for the tooltip (short description) of the tactic.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="tacticProvider" type="string">
            <annotation>
               <documentation>
                  the name of a class which will be used to invoke the proof tactic. The class must implement &lt;code&gt;org.eventb.ui.prover.ITacticProvider&lt;/code&gt;. There is a default implementation &lt;code&gt;org.eventb.ui.prover.DefaultTacticProvider&lt;/code&gt;. If this attribute is set, then attribute &lt;code&gt;proofCommand&lt;/code&gt; must not be set.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.eventb.ui.prover.ITacticProvider"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="proofCommand" type="string">
            <annotation>
               <documentation>
                  the name of a class which will be used to invoke the proof tactic. The class must implement &lt;code&gt;org.eventb.ui.prover.IProofCommand&lt;/code&gt;. If this attribute is set, then attribute &lt;code&gt;tacticProvider&lt;/code&gt; must not be set and attribute &lt;code&gt;target&lt;/code&gt; must be &lt;code&gt;global&lt;/code&gt;.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eventb.ui.prover.IProofCommand"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="dropdown" type="string">
            <annotation>
               <documentation>
                  id of the dropdown through which this tactic is available.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="toolbar" type="string">
            <annotation>
               <documentation>
                  id of the toolbar through which this tactic is available.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="priority" type="string" use="required">
            <annotation>
               <documentation>
                  an integer number indicating the priority for this tactic. The priority is used to sort tactics in dropdown lists and toolbars in ascending order. The highest priority is 0. FIXME how can it be 0?
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  a translatable name that will be used in the UI for this tactic.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="skipPostTactic" type="boolean" use="default" value="false">
            <annotation>
               <documentation>
                  Skips post tactic after tactic application.
Most contributors need not use this option. You should have a strong reason to skip post tactic.
This attribute is only used when &lt;code&gt;tacticProvider&lt;/code&gt; is set; it has no effect when &lt;code&gt;proofCommand&lt;/code&gt; is used.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="toolbar">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="id"/>
         </appInfo>
         <documentation>
            This element is used for declaring a new toolbar in the Proof Control View.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique name that will be used to identify this toolbar.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="priority" type="string" use="required">
            <annotation>
               <documentation>
                  an integer number indicating the priority for this toolbar. In the Proof Control view, toolbars are sorted from left to right by increasing priority.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  a translatable name that will be used in the UI for this toolbar.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="dropdown">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="id"/>
         </appInfo>
         <documentation>
            This element is used for declaring a new dropdown list in the Proof Control View.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique name that will be used to identify this dropdown.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="toolbar" type="string" use="required">
            <annotation>
               <documentation>
                  the id of the parent toolbar (see toolbar element), this must be an existing toolbar.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="priority" type="string" use="required">
            <annotation>
               <documentation>
                  an integer number indicating the priority for this toolbar which is used to sort the dropdown lists in the parent toolbar in ascending order. The highest priority is 0.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  a translatable name that will be used in the UI for this dropdown.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="dynamic_dropdown">
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique name that will be used to identify this dynamic dropdown.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  a translatable name that will be used in the UI for this dynamic dropdown.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="icon" type="string" use="required">
            <annotation>
               <documentation>
                  an icon for this dynamic tactic dropdown tactic (recommended size is 16 x 16).
               </documentation>
               <appInfo>
                  <meta.attribute kind="resource"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="toolbar" type="string" use="required">
            <annotation>
               <documentation>
                  the id of the parent toolbar (see toolbar element), this must be an existing toolbar.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="tacticProvider" type="string" use="required">
            <annotation>
               <documentation>
                  the name of a class which will be used to invoke the proof tactic. The class must implement &lt;code&gt;org.eventb.ui.prover.IUIDynTacticProvider&lt;/code&gt;.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.eventb.ui.prover.IUIDynTacticProvider"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         &lt;p&gt;The value of the &lt;code&gt;tacticProvider&lt;/code&gt; attribute of a &lt;code&gt;tactic&lt;/code&gt; element must be a fully qualified name of the class that implements &lt;code&gt;org.eventb.ui.prover.ITacticProvider&lt;/code&gt;.  Plug-in developers can do so by extending the default implementation &lt;code&gt;org.eventb.ui.prover.DefaultTacticProvider&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The value of the &lt;code&gt;proofCommand&lt;/code&gt; attribute of a &lt;code&gt;tactic&lt;/code&gt; element must be
a fully qualified name of a class that implements &lt;code&gt;org.eventb.ui.prover.IProofCommand&lt;/code&gt;.&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         0.6.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         The following is an example of adding proof commands to the Event-B Proving User Interface. Note, that there are 3 different targets: &lt;code&gt;goal&lt;/code&gt;, &lt;code&gt;global&lt;/code&gt; and &lt;code&gt;hypothesis&lt;/code&gt;. Also, the location of the global proof commands is also related to &lt;code&gt;toolbar&lt;/code&gt; and &lt;code&gt;dropdown&lt;/code&gt;.
&lt;p&gt;
&lt;pre&gt;
&lt;extension point=&quot;org.eventb.ui.proofTactics&quot;&gt;
      &lt;tactic
            icon=&quot;icons/full/ctool16/falsify_prover.gif&quot;
            id=&quot;org.eventb.ui.falsifyHyp&quot;
            interrupt=&quot;false&quot;
            name=&quot;%proofTactics.falsifyHyp.name&quot;
            priority=&quot;1&quot;
            tacticProvider=&quot;org.eventb.internal.ui.prover.tactics.ContradictHyp&quot;
            target=&quot;hypothesis&quot;
            tooltip=&quot;%hypothesisProofTactics.falsify.tooltip&quot;/&gt;
       &lt;tactic
            icon=&quot;icons/pending.gif&quot;
            id=&quot;org.eventb.ui.riHyp&quot;
            interrupt=&quot;false&quot;
            name=&quot;%proofTactics.riHyp.name&quot;
            priority=&quot;9&quot;
            tacticProvider=&quot;org.eventb.internal.ui.prover.tactics.RemoveInclusionHyp&quot;
            target=&quot;hypothesis&quot;
            tooltip=&quot;%proofTactics.riHyp.tooltip&quot;/&gt;
      &lt;tactic
            icon=&quot;icons/pending.gif&quot;
            id=&quot;org.eventb.ui.funOvrHyp&quot;
            interrupt=&quot;false&quot;
            name=&quot;%proofTactics.funOvrHyp.name&quot;
            priority=&quot;9&quot;
            tacticProvider=&quot;org.eventb.internal.ui.prover.tactics.FunOvrHyp&quot;
            target=&quot;hypothesis&quot;
            tooltip=&quot;%proofTactics.funOvrHyp.tooltip&quot;/&gt;
      &lt;tactic
            icon=&quot;icons/full/ctool16/falsify_prover.gif&quot;
            id=&quot;org.eventb.ui.falsifyGoal&quot;
            interrupt=&quot;false&quot;
            name=&quot;%proofTactics.falsifyGoal.name&quot;
            priority=&quot;1&quot;
            tacticProvider=&quot;org.eventb.internal.ui.prover.tactics.ContradictGoal&quot;
            target=&quot;goal&quot;
            tooltip=&quot;%proofTactics.falsifyGoal.tooltip&quot;/&gt;
      &lt;tactic
            icon=&quot;icons/pending.gif&quot;
            id=&quot;org.eventb.ui.riGoal&quot;
            interrupt=&quot;false&quot;
            name=&quot;%proofTactics.riGoal.name&quot;
            priority=&quot;9&quot;
            tacticProvider=&quot;org.eventb.internal.ui.prover.tactics.RemoveInclusionGoal&quot;
            target=&quot;goal&quot;
            tooltip=&quot;%proofTactics.riGoal.tooltip&quot;/&gt;
      &lt;tactic
            icon=&quot;icons/pending.gif&quot;
            id=&quot;org.eventb.ui.funOvrGoal&quot;
            interrupt=&quot;false&quot;
            name=&quot;%proofTactics.funOvrGoal.name&quot;
            priority=&quot;9&quot;
            tacticProvider=&quot;org.eventb.internal.ui.prover.tactics.FunOvrGoal&quot;
            target=&quot;goal&quot;
            tooltip=&quot;%proofTactics.funOvrGoal.tooltip&quot;/&gt;
      &lt;tactic
            icon=&quot;icons/full/ctool16/sh_prover.gif&quot;
            id=&quot;org.eventb.ui.searchHyp&quot;
            interrupt=&quot;false&quot;
            name=&quot;%proofTactics.searchHyp.name&quot;
            priority=&quot;1&quot;
            proofCommand=&quot;org.eventb.internal.ui.prover.tactics.SearchHypotheses&quot;
            target=&quot;global&quot;
            toolbar=&quot;org.eventb.ui.navigationToolbar&quot;
            tooltip=&quot;%proofTactics.searchHyp.tooltip&quot;/&gt;
      &lt;toolbar
            id=&quot;org.eventb.ui.sequentToolbar&quot;
            name=&quot;%proofToolbars.sequent.name&quot;
            priority=&quot;1&quot;/&gt;
      &lt;dropdown
            id=&quot;org.eventb.ui.reviewDropdown&quot;
            name=&quot;%proofDropdowns.review.name&quot;
            priority=&quot;5&quot;
            toolbar=&quot;org.eventb.ui.sequentToolbar&quot;/&gt;
      &lt;tactic
            dropdown=&quot;org.eventb.ui.reviewDropdown&quot;
            icon=&quot;icons/full/ctool16/rv_prover.gif&quot;
            id=&quot;org.eventb.ui.review&quot;
            interrupt=&quot;false&quot;
            name=&quot;%proofTactics.review.name&quot;
            priority=&quot;4&quot;
            proofCommand=&quot;org.eventb.internal.ui.prover.tactics.Review&quot;
            target=&quot;global&quot;
            tooltip=&quot;%proofTactics.review.tooltip&quot;/&gt;
      &lt;tactic
            icon=&quot;icons/full/ctool16/exE_prover.gif&quot;
            id=&quot;org.eventb.ui.exE&quot;
            interrupt=&quot;false&quot;
            name=&quot;%proofTactics.exE.name&quot;
            priority=&quot;7&quot;
            tacticProvider=&quot;org.eventb.internal.ui.prover.tactics.ExistsInstantiationHyp&quot;
            target=&quot;hypothesis&quot;
            tooltip=&quot;%hypothesisProofTactics.ExE.tooltip&quot;/&gt;
      &lt;tactic
            icon=&quot;icons/pending.gif&quot;
            id=&quot;org.eventb.ui.funOvr&quot;
            interrupt=&quot;false&quot;
            name=&quot;%proofTactics.funOvr.name&quot;
            priority=&quot;9&quot;
            tacticProvider=&quot;org.eventb.internal.ui.prover.tactics.FunOvr&quot;
            target=&quot;any&quot;
            tooltip=&quot;%proofTactics.funOvr.tooltip&quot;/&gt;
&lt;/extension&gt;
&lt;/pre&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         &lt;p&gt;This &lt;code&gt;org.eventb.ui&lt;/code&gt; plug-in contains implementations of both &lt;code&gt;tacticProvider&lt;/code&gt; and &lt;code&gt;proofCommand&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;tacticProvider&lt;/code&gt;, plug-in developers are suggested to have a look at the following implementations:
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;org.event.internal.ui.prover.tactics.ContradictHyp&lt;/code&gt; as a proof tactic indirectly for hypothesis (appears on the left hand side of the predicate).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org.event.internal.ui.prover.tactics.RemoveInclusionHyp&lt;/code&gt; as a proof tactic directly in the hypothesis, with a non-standard operator position.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org.event.internal.ui.prover.tactics.FunOvrHyp&lt;/code&gt; as a proof tactic directly in the hypothesis, with a non-standard operator position.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org.event.internal.ui.prover.tactics.ContradictGoal&lt;/code&gt; as a proof tactic indirectly for goal (appears on the left hand side of the predicate).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org.event.internal.ui.prover.tactics.RemoveInclusionGoal&lt;/code&gt; as a proof tactic directly in the goal, with a standard operator position.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org.event.internal.ui.prover.tactics.FunOvrGoal&lt;/code&gt; as a proof tactic directly in the goal, with a non-standard operator position.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;org.event.internal.ui.prover.tactics.AddHypothesis&lt;/code&gt; as a global proof tactic.&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;proofCommand&lt;/code&gt;, plug-in developers are suggested to have a look at the implementation of &lt;code&gt;org.event.internal.ui.prover.tactics.Prune&lt;/code&gt; which is a global proof tactic.&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2005, 2014 ETH Zurich and others.&lt;br/&gt;
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
&lt;a href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;http://www.eclipse.org/legal/epl-v10.html&lt;/a&gt;
      </documentation>
   </annotation>

</schema>
