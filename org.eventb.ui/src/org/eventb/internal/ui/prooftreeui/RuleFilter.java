/*******************************************************************************
 * Copyright (c) 2006, 2024 ETH Zurich and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     ETH Zurich - initial API and implementation
 *******************************************************************************/
package org.eventb.internal.ui.prooftreeui;

import org.eclipse.jface.viewers.Viewer;
import org.eclipse.jface.viewers.ViewerFilter;
import org.eventb.core.seqprover.IProofRule;
import org.eventb.core.seqprover.IProofTreeNode;

public class RuleFilter extends ViewerFilter {

	String reasonerID;

	public RuleFilter(String reasonerID) {
		this.reasonerID = reasonerID;
	}

	@Override
	public boolean select(Viewer viewer, Object parentElement, Object element) {
		if (ProofTreeUIUtils.DEBUG)
			ProofTreeUIUtils.debug("Filtered reasoner ID: " + reasonerID);
		if (element instanceof IProofTreeNode) {
			IProofTreeNode node = (IProofTreeNode) element;
			if (node.isOpen()) {
				return true; // Do not filter open node
			}
			IProofRule rule = node.getRule();
			if (ProofTreeUIUtils.DEBUG) {
				ProofTreeUIUtils.debug("Rule display" + node.getRule().getDisplayName());
				ProofTreeUIUtils.debug("Generated by reasoner: " + rule.generatedBy().getReasonerID());
			}
			return !rule.generatedBy().getReasonerID().equals(reasonerID);
		}
		return true;
	}

	@Override
	public String toString() {
		return reasonerID;
	}

}
